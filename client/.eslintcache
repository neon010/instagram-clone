[{"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Navbar.js":"3","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Home.js":"4","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signin.js":"5","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signup.js":"6","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Profile.js":"7","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\createPost.js":"8","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\reducers\\userReducer.js":"9","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\UserProfile.js":"10","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\SubscribesUserPost.js":"11"},{"size":222,"mtime":1609131656659,"results":"12","hashOfConfig":"13"},{"size":1750,"mtime":1609658810931,"results":"14","hashOfConfig":"13"},{"size":3570,"mtime":1609754142460,"results":"15","hashOfConfig":"13"},{"size":5555,"mtime":1609752547036,"results":"16","hashOfConfig":"13"},{"size":2660,"mtime":1609681884473,"results":"17","hashOfConfig":"13"},{"size":3452,"mtime":1609681845542,"results":"18","hashOfConfig":"13"},{"size":3884,"mtime":1609754687457,"results":"19","hashOfConfig":"13"},{"size":2970,"mtime":1609602000913,"results":"20","hashOfConfig":"13"},{"size":558,"mtime":1609651986804,"results":"21","hashOfConfig":"13"},{"size":5007,"mtime":1609754491487,"results":"22","hashOfConfig":"13"},{"size":5395,"mtime":1609680517247,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"huz50b",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"26"},"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\index.js",[],["51","52"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\App.js",["53","54"],"import React, {useEffect,createContext,useReducer,useContext} from \"react\";\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Screens/Home\";\nimport Signin from \"./components/Screens/Signin\";\nimport Signup from \"./components/Screens/Signup\";\nimport Profile from \"./components/Screens/Profile\";\nimport CreatePost from \"./components/Screens/createPost\";\nimport {reducer, initialState} from \"./reducers/userReducer\"\nimport UserProfile from \"./components/Screens/UserProfile\";\nimport SubscribesUserPost from \"./components/Screens/SubscribesUserPost\";\n\n\nexport const UserContext = createContext();\n\nconst Routing = () =>{\n  const history = useHistory();\n  const {state,dispatch} = useContext(UserContext);\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user){\n      dispatch({type:\"USER\", payload:user});\n    }else{\n      history.push(\"/signin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/signin\" exact component={Signin}/>\n      <Route path=\"/signup\" exact component={Signup}/>\n      <Route path=\"/profile\" exact component={Profile}/>\n      <Route path=\"/createPost\" exact component={CreatePost}/>\n      <Route path=\"/profile/:userid\"  component={UserProfile}/>\n      <Route path=\"/myfollowingpost\"  component={SubscribesUserPost}/>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n      <Router>\n        <Navbar/>\n        <Routing />\n      </Router>\n    </UserContext.Provider>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Home.js",["55"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signin.js",[],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signup.js",["56"],"import React,{useState,useEffect} from 'react'\r\nimport {Link,useHistory} from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\n\r\nfunction Signup(){\r\n    const history = useHistory()\r\n    const [name,setName] = useState(\"\")\r\n    const [password,setPasword] = useState(\"\")\r\n    const [email,setEmail] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(undefined);\r\n\r\n\r\n    useEffect(()=>{\r\n        if(url){\r\n            uploadFields()\r\n        }\r\n    },[url]);\r\n\r\n\r\n    const uploadPic = ()=>{\r\n        const data = new FormData()\r\n        data.append(\"file\",image)\r\n        data.append(\"upload_preset\",\"insta-clone\")\r\n        data.append(\"cloud_name\",\"mycloud213\")\r\n        fetch(\"https://api.cloudinary.com/v1_1/mycloud213/image/upload\",{\r\n            method:\"post\",\r\n            body:data\r\n        })\r\n        .then(res=>res.json())\r\n        .then(data=>{\r\n           setUrl(data.url)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err)\r\n        });\r\n    };\r\n\r\n\r\n    const uploadFields = ()=>{\r\n\r\n        fetch(\"/signup\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n           if(data.error){\r\n              M.toast({html: data.error, classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:data.message, classes:\"#43a047 green darken-1\"})\r\n               history.push('/signin')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const PostData = ()=>{\r\n        if(image){\r\n            uploadPic()\r\n        }else{\r\n            uploadFields()\r\n        }\r\n       \r\n    }\r\n\r\n   return (\r\n      <div className=\"mycard\">\r\n          <div className=\"card auth-card input-field\">\r\n            <h2 className=\"login-title\">Instagram</h2>\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            value={name}\r\n            onChange={(e)=>setName(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"text\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e)=>setEmail(e.target.value)}\r\n            />\r\n            <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e)=>setPasword(e.target.value)}\r\n            />\r\n            <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Upload pic</span>\r\n                <input type=\"file\" onChange={(e)=>setImage(e.target.files[0])} />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>PostData()}\r\n            >\r\n                SignUP\r\n            </button>\r\n            <h5 className=\"signin-signup-link\">\r\n                <Link to=\"/signin\">Already have an account ?</Link>\r\n            </h5>\r\n             \r\n               \r\n         \r\n            \r\n    \r\n        </div>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default Signup","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Profile.js",["57","58"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\createPost.js",["59"],"import React, { useState,useEffect } from \"react\"\r\nimport {useHistory} from \"react-router-dom\";\r\nimport M from 'materialize-css'\r\n\r\nfunction CreatePost(){\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n       if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{   \r\n           if(data.error){\r\n              M.toast({html: data.error.message, classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    },[url])\r\n  \r\n   const postDetails = ()=>{\r\n       const data = new FormData()\r\n       data.append(\"file\",image)\r\n       data.append(\"upload_preset\",\"insta-clone\")\r\n       data.append(\"cloud_name\",\"mycloud213\")\r\n       fetch(\"https://api.cloudinary.com/v1_1/mycloud213/image/upload\",{\r\n           method:\"post\",\r\n           body:data\r\n       })\r\n       .then(res=>res.json())\r\n       .then(data=>{\r\n          setUrl(data.url)\r\n       })\r\n       .catch(err=>{\r\n           console.log(err)\r\n       })    \r\n   }\r\n\r\n\r\n    return (\r\n        <div className=\"card input-filed\"   \r\n        style={{\r\n        margin:\"30px auto\",\r\n        maxWidth:\"500px\",\r\n        padding:\"20px\",\r\n        textAlign:\"center\"\r\n        }}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(event)=>{setTitle(event.target.value)}}\r\n            />\r\n           <input\r\n            type=\"text\"\r\n            placeholder=\"body\"\r\n            value={body}\r\n            onChange={(event)=>{setBody(event.target.value)}}\r\n             />\r\n           <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Uplaod Image</span>\r\n                <input \r\n                type=\"file\"\r\n                onChange={(event)=>{setImage(event.target.files[0])}}\r\n                />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button \r\n            className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>postDetails()}\r\n            >\r\n                Submit post\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreatePost;","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\reducers\\userReducer.js",[],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\UserProfile.js",["60","61"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\SubscribesUserPost.js",["62"],"import React,{useState,useEffect,useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nconst SubscribesUserPost = ()=>{\r\n    const [data,setData] = useState([]);\r\n    const {state} = useContext(UserContext);\r\n    \r\n    useEffect(()=>{\r\n        fetch(\"/getsubpost\", {\r\n            headers:{\r\n                \"auth-token\": localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json()).then(data => setData(data))\r\n    }, []);\r\n\r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n          const newData = data.map(item=>{\r\n              if(item._id === result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n          })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    \r\n    const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"auth-token\":localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n        const newData = data.map(item=>{\r\n            if(item._id === result._id){\r\n                return result\r\n            }else{\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n        }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n    const makeComment = (text,postId)=>{\r\n        fetch('/comment',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"auth-token\": localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId,\r\n                text\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.map(item=>{\r\n              if(item._id === result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n           })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    const deletePost = (postid)=>{\r\n        fetch(`/deletepost/${postid}`,{\r\n            method:\"delete\",\r\n            headers:{\r\n                \"auth-token\":localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            const newData = data.filter(item=>{\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n\r\n   return (\r\n       <div className=\"home\">\r\n           {\r\n               data.map(item => {\r\n                   return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                    <h5 style={{padding:\"5px\"}}>\r\n                        <Link to={item.postedBy._id !== state._id ? `/profile/${item.postedBy._id}` : \"/profile\" }>\r\n                            <img src={item.postedBy.pic} alt=\"profile-pic\" className=\"avatar\" style={{marginRight:\"10px\"}}/>{item.postedBy.name}\r\n                        </Link> {item.postedBy._id === state._id \r\n                    && <i className=\"material-icons\" style={{\r\n                        float:\"right\"\r\n                    }} \r\n                    onClick={()=>deletePost(item._id)}\r\n                    >delete</i>\r\n\r\n                    }</h5>\r\n\r\n                <div className=\"card-image\">\r\n                    <img className=\"img\" \r\n                        src={item.photo} alt=\"post image\"/>\r\n                </div>\r\n                <div className=\"card-content\">\r\n                    {item.likes.includes(state._id)\r\n                    ? \r\n                     <i className=\"material-icons\"\r\n                            onClick={()=>{unlikePost(item._id)}}\r\n                      >thumb_down</i>\r\n                    : \r\n                    <i className=\"material-icons\"\r\n                    onClick={()=>{likePost(item._id)}}\r\n                    >thumb_up</i>\r\n                    }\r\n                    <h6>{item.likes.length} likes</h6>\r\n                    <h6>{item.title}</h6>\r\n                    <p>{item.body}</p>\r\n                    {\r\n                            item.comments.map(record=>{\r\n                                return(\r\n                                <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                )\r\n                            })\r\n                        }\r\n                        <form onSubmit={(e)=>{\r\n                            e.preventDefault()\r\n                            makeComment(e.target[0].value,item._id)\r\n                        }}>\r\n                          <input type=\"text\" placeholder=\"add a comment\" />  \r\n                        </form>\r\n                </div>\r\n            </div>\r\n                   )\r\n               })\r\n           }\r\n        </div>\r\n   )\r\n}\r\n\r\n\r\nexport default SubscribesUserPost;",{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","severity":1,"message":"68","line":19,"column":10,"nodeType":"69","messageId":"70","endLine":19,"endColumn":15},{"ruleId":"71","severity":1,"message":"72","line":27,"column":6,"nodeType":"73","endLine":27,"endColumn":8,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":130,"column":29,"nodeType":"77","endLine":131,"endColumn":68},{"ruleId":"71","severity":1,"message":"78","line":19,"column":7,"nodeType":"73","endLine":19,"endColumn":12,"suggestions":"79"},{"ruleId":"71","severity":1,"message":"80","line":55,"column":8,"nodeType":"73","endLine":55,"endColumn":15,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":68,"column":21,"nodeType":"77","endLine":71,"endColumn":23},{"ruleId":"71","severity":1,"message":"84","line":38,"column":7,"nodeType":"73","endLine":38,"endColumn":12,"suggestions":"85"},{"ruleId":"71","severity":1,"message":"86","line":21,"column":8,"nodeType":"73","endLine":21,"endColumn":10,"suggestions":"87"},{"ruleId":"82","severity":1,"message":"83","line":89,"column":21,"nodeType":"77","endLine":91,"endColumn":23},{"ruleId":"75","severity":1,"message":"76","line":127,"column":21,"nodeType":"77","endLine":128,"endColumn":60},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["90"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["91"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["92"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["93"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["94"],"no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},{"desc":"103","fix":"104"},"Update the dependencies array to be: [dispatch, history]",{"range":"105","text":"106"},"Update the dependencies array to be: [uploadFields, url]",{"range":"107","text":"108"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"109","text":"110"},"Update the dependencies array to be: [body, history, title, url]",{"range":"111","text":"112"},"Update the dependencies array to be: [userid]",{"range":"113","text":"114"},[1017,1019],"[dispatch, history]",[499,504],"[uploadFields, url]",[1708,1715],"[dispatch, image, state]",[1152,1157],"[body, history, title, url]",[710,712],"[userid]"]