[{"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\index.js":"1","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\App.js":"2","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Navbar.js":"3","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Home.js":"4","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signin.js":"5","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signup.js":"6","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Profile.js":"7","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\createPost.js":"8","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\reducers\\userReducer.js":"9","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\UserProfile.js":"10"},{"size":222,"mtime":1609131656659,"results":"11","hashOfConfig":"12"},{"size":1606,"mtime":1609395268726,"results":"13","hashOfConfig":"12"},{"size":1275,"mtime":1609307739531,"results":"14","hashOfConfig":"12"},{"size":5661,"mtime":1609391868459,"results":"15","hashOfConfig":"12"},{"size":2302,"mtime":1609250809122,"results":"16","hashOfConfig":"12"},{"size":2400,"mtime":1609310317376,"results":"17","hashOfConfig":"12"},{"size":1938,"mtime":1609417889133,"results":"18","hashOfConfig":"12"},{"size":2975,"mtime":1609244369809,"results":"19","hashOfConfig":"12"},{"size":417,"mtime":1609414283394,"results":"20","hashOfConfig":"12"},{"size":5021,"mtime":1609417661301,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"huz50b",{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\index.js",[],["47","48"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\App.js",["49","50"],"import React, {useEffect,createContext,useReducer,useContext} from \"react\";\nimport './App.css';\nimport {BrowserRouter as Router, Route, Switch, useHistory} from \"react-router-dom\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Screens/Home\";\nimport Signin from \"./components/Screens/Signin\";\nimport Signup from \"./components/Screens/Signup\";\nimport Profile from \"./components/Screens/Profile\";\nimport CreatePost from \"./components/Screens/createPost\";\nimport {reducer, initialState} from \"./reducers/userReducer\"\nimport UserProfile from \"./components/Screens/UserProfile\";\n\n\nexport const UserContext = createContext();\n\nconst Routing = () =>{\n  const history = useHistory();\n  const {state,dispatch} = useContext(UserContext);\n  useEffect(()=>{\n\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if(user){\n      dispatch({type:\"USER\", payload:user});\n    }else{\n      history.push(\"/signin\");\n    }\n  }, []);\n\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={Home}/>\n      <Route path=\"/signin\" exact component={Signin}/>\n      <Route path=\"/signup\" exact component={Signup}/>\n      <Route path=\"/profile\" exact component={Profile}/>\n      <Route path=\"/createPost\" exact component={CreatePost}/>\n      <Route path=\"/profile/:userid\"  component={UserProfile}/>\n    </Switch>\n  )\n}\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n      <Router>\n        <Navbar/>\n        <Routing />\n      </Router>\n    </UserContext.Provider>\n\n  );\n}\n\nexport default App;\n","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Navbar.js",[],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Home.js",["51","52","53","54","55"],"import React, { useState,useEffect ,useContext } from \"react\";\r\nimport {UserContext} from '../../App';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nfunction Home(){\r\n    const [data,setData] = useState([]);\r\n    const {state,dispatch} = useContext(UserContext);\r\n\r\n\r\n    useEffect(()=>{\r\n        fetch(\"/allpost\", {\r\n            headers:{\r\n                \"auth-token\": localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res=>res.json())\r\n            .then(result=>{\r\n                setData(result);\r\n            })\r\n    },[])\r\n\r\n\r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Auth-token\": localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n                 //   console.log(result)\r\n          const newData = data.map(item=>{\r\n              if(item._id==result._id){\r\n                  return result\r\n              }else{\r\n                  return item\r\n              }\r\n          })\r\n          setData(newData)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n}\r\n    const unlikePost = (id)=>{\r\n        fetch('/unlike',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Auth-token\":localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n        //   console.log(result)\r\n        const newData = data.map(item=>{\r\n            if(item._id==result._id){\r\n                return result\r\n            }else{\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n        }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\nconst makeComment = (text,postId)=>{\r\n    fetch('/comment',{\r\n        method:\"put\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\",\r\n            \"Auth-token\":localStorage.getItem(\"jwt\")\r\n        },\r\n        body:JSON.stringify({\r\n            postId,\r\n            text\r\n        })\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        console.log(result)\r\n        const newData = data.map(item=>{\r\n          if(item._id==result._id){\r\n              return result\r\n          }else{\r\n              return item\r\n          }\r\n       })\r\n      setData(newData)\r\n    }).catch(err=>{\r\n        console.log(err)\r\n    })\r\n}\r\n\r\nconst deletePost = (postid)=>{\r\n    fetch(`/deletepost/${postid}`,{\r\n        method:\"delete\",\r\n        headers:{\r\n            \"auth-token\":localStorage.getItem(\"jwt\")\r\n        }\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n        const newData = data.filter(item=>{\r\n            return item._id !== result._id\r\n        })\r\n        setData(newData)\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            {data.map(item=> {\r\n                return (\r\n                    <div className=\"card home-card\" key={item._id}>\r\n                            <h5 style={{padding:\"5px\"}}>\r\n                                <Link to={item.postedBy._id !== state._id ? `/profile/${item.postedBy._id}` : \"/profile\" }>\r\n                                    {item.postedBy.name}\r\n                                </Link> {item.postedBy._id === state._id \r\n                            && <i className=\"material-icons\" style={{\r\n                                float:\"right\"\r\n                            }} \r\n                            onClick={()=>deletePost(item._id)}\r\n                            >delete</i>\r\n\r\n                            }</h5>\r\n\r\n                        <div className=\"card-image\">\r\n                            <img className=\"img\" \r\n                                src={item.photo} alt=\"post image\"/>\r\n                        </div>\r\n                        <div className=\"card-content\">\r\n                            <i className=\"material-icons\" style={{color: \"red\"}}> favorite</i>\r\n                            {item.likes.includes(state._id)\r\n                            ? \r\n                             <i className=\"material-icons\"\r\n                                    onClick={()=>{unlikePost(item._id)}}\r\n                              >thumb_down</i>\r\n                            : \r\n                            <i className=\"material-icons\"\r\n                            onClick={()=>{likePost(item._id)}}\r\n                            >thumb_up</i>\r\n                            }\r\n                            <h6>{item.likes.length} likes</h6>\r\n                            <h6>{item.title}</h6>\r\n                            <p>{item.body}</p>\r\n                            {\r\n                                    item.comments.map(record=>{\r\n                                        return(\r\n                                        <h6 key={record._id}><span style={{fontWeight:\"500\"}}>{record.postedBy.name}</span> {record.text}</h6>\r\n                                        )\r\n                                    })\r\n                                }\r\n                                <form onSubmit={(e)=>{\r\n                                    e.preventDefault()\r\n                                    makeComment(e.target[0].value,item._id)\r\n                                }}>\r\n                                  <input type=\"text\" placeholder=\"add a comment\" />  \r\n                                </form>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Home","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signin.js",["56"],"import React,{useState,useContext} from \"react\";\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport {UserContext} from \"../../App\"\r\nimport M from 'materialize-css';\r\n\r\nfunction Signin(){\r\n    const {state, dispatch} = useContext(UserContext);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const history = useHistory();\r\n\r\n    const postData = () => {\r\n        fetch(\"/signin\", {\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res=>res.json())\r\n          .then(data=> {\r\n            if(data.error){\r\n                console.log(data);\r\n                M.toast({html: data.error.message,classes:\"#c62828 red darken-3\"});\r\n             }else{\r\n                localStorage.setItem(\"jwt\", data.token);\r\n                localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n                dispatch({type:\"USER\", payload:data.user});\r\n                M.toast({html:\"signed successfully\",classes:\"#43a047 green darken-1\"});\r\n                history.push('/');\r\n            }\r\n          }).catch((error)=> console.log(error));          \r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"login-card\">\r\n            <div className=\"card auth-card\">\r\n                <h1 className=\"login-title\">Instagram</h1>\r\n                <input \r\n                type=\"text\" \r\n                placeholder=\"email or username\"\r\n                value={email}\r\n                onChange={(event)=>setEmail(event.target.value)}\r\n                />\r\n                <input \r\n                type=\"password\" \r\n                placeholder=\"password\"\r\n                value={password}\r\n                onChange={(event)=>setPassword(event.target.value)}\r\n                />\r\n                <button \r\n                className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n                onClick={()=>postData()}\r\n                >\r\n                    Login\r\n                </button>\r\n                <h5>\r\n                    <Link to=\"/home\">Dont have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Signin","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Signup.js",[],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\Profile.js",["57","58"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\createPost.js",["59","60"],"import React, { useState,useEffect } from \"react\"\r\nimport {Link,useHistory} from \"react-router-dom\";\r\nimport M from 'materialize-css'\r\n\r\nfunction CreatePost(){\r\n    const history = useHistory()\r\n    const [title,setTitle] = useState(\"\")\r\n    const [body,setBody] = useState(\"\")\r\n    const [image,setImage] = useState(\"\")\r\n    const [url,setUrl] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n       if(url){\r\n        fetch(\"/createpost\",{\r\n            method:\"post\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Auth-token\": localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                title,\r\n                body,\r\n                pic:url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{   \r\n           if(data.error){\r\n              M.toast({html: data.error.message, classes:\"#c62828 red darken-3\"})\r\n           }\r\n           else{\r\n               M.toast({html:\"Created post Successfully\",classes:\"#43a047 green darken-1\"})\r\n               history.push('/')\r\n           }\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n    }\r\n    },[url])\r\n  \r\n   const postDetails = ()=>{\r\n       const data = new FormData()\r\n       data.append(\"file\",image)\r\n       data.append(\"upload_preset\",\"insta-clone\")\r\n       data.append(\"cloud_name\",\"mycloud213\")\r\n       fetch(\"https://api.cloudinary.com/v1_1/mycloud213/image/upload\",{\r\n           method:\"post\",\r\n           body:data\r\n       })\r\n       .then(res=>res.json())\r\n       .then(data=>{\r\n          setUrl(data.url)\r\n       })\r\n       .catch(err=>{\r\n           console.log(err)\r\n       })    \r\n   }\r\n\r\n\r\n    return (\r\n        <div className=\"card input-filed\"   \r\n        style={{\r\n        margin:\"30px auto\",\r\n        maxWidth:\"500px\",\r\n        padding:\"20px\",\r\n        textAlign:\"center\"\r\n        }}>\r\n            <input \r\n            type=\"text\"\r\n            placeholder=\"title\"\r\n            value={title}\r\n            onChange={(event)=>{setTitle(event.target.value)}}\r\n            />\r\n           <input\r\n            type=\"text\"\r\n            placeholder=\"body\"\r\n            value={body}\r\n            onChange={(event)=>{setBody(event.target.value)}}\r\n             />\r\n           <div className=\"file-field input-field\">\r\n            <div className=\"btn #64b5f6 blue darken-1\">\r\n                <span>Uplaod Image</span>\r\n                <input \r\n                type=\"file\"\r\n                onChange={(event)=>{setImage(event.target.files[0])}}\r\n                />\r\n            </div>\r\n            <div className=\"file-path-wrapper\">\r\n                <input className=\"file-path validate\" type=\"text\" />\r\n            </div>\r\n            </div>\r\n            <button \r\n            className=\"btn waves-effect waves-light #64b5f6 blue darken-1\"\r\n            onClick={()=>postDetails()}\r\n            >\r\n                Submit post\r\n            </button>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default CreatePost;","C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\reducers\\userReducer.js",["61","62","63"],"C:\\Users\\user\\Desktop\\instagram clone\\client\\src\\components\\Screens\\UserProfile.js",["64","65","66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":18,"column":10,"nodeType":"73","messageId":"74","endLine":18,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":27,"column":6,"nodeType":"77","endLine":27,"endColumn":8,"suggestions":"78"},{"ruleId":"71","severity":1,"message":"79","line":7,"column":18,"nodeType":"73","messageId":"74","endLine":7,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":36,"column":26,"nodeType":"82","messageId":"83","endLine":36,"endColumn":28},{"ruleId":"80","severity":1,"message":"81","line":61,"column":24,"nodeType":"82","messageId":"83","endLine":61,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":87,"column":22,"nodeType":"82","messageId":"83","endLine":87,"endColumn":24},{"ruleId":"84","severity":1,"message":"85","line":133,"column":29,"nodeType":"86","endLine":134,"endColumn":68},{"ruleId":"71","severity":1,"message":"72","line":7,"column":12,"nodeType":"73","messageId":"74","endLine":7,"endColumn":17},{"ruleId":"71","severity":1,"message":"79","line":6,"column":18,"nodeType":"73","messageId":"74","endLine":6,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":26,"column":21,"nodeType":"86","endLine":29,"endColumn":23},{"ruleId":"71","severity":1,"message":"89","line":2,"column":9,"nodeType":"73","messageId":"74","endLine":2,"endColumn":13},{"ruleId":"75","severity":1,"message":"90","line":38,"column":7,"nodeType":"77","endLine":38,"endColumn":12,"suggestions":"91"},{"ruleId":"92","severity":1,"message":"93","line":4,"column":8,"nodeType":"94","messageId":"95","endLine":4,"endColumn":26},{"ruleId":"92","severity":1,"message":"93","line":7,"column":8,"nodeType":"94","messageId":"95","endLine":7,"endColumn":27},{"ruleId":"80","severity":1,"message":"81","line":10,"column":19,"nodeType":"82","messageId":"83","endLine":10,"endColumn":21},{"ruleId":"75","severity":1,"message":"96","line":21,"column":8,"nodeType":"77","endLine":21,"endColumn":10,"suggestions":"97"},{"ruleId":"80","severity":1,"message":"98","line":67,"column":80,"nodeType":"82","messageId":"83","endLine":67,"endColumn":82},{"ruleId":"87","severity":1,"message":"88","line":91,"column":21,"nodeType":"86","endLine":93,"endColumn":23},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["101"],"'dispatch' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["102"],"no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["103"],"Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},{"desc":"106","fix":"107"},{"desc":"108","fix":"109"},"Update the dependencies array to be: [dispatch, history]",{"range":"110","text":"111"},"Update the dependencies array to be: [body, history, title, url]",{"range":"112","text":"113"},"Update the dependencies array to be: [userid]",{"range":"114","text":"115"},[944,946],"[dispatch, history]",[1157,1162],"[body, history, title, url]",[722,724],"[userid]"]